import java.util.ArrayList;

import javax.crypto.CipherSpi;
import javax.swing.text.StyledEditorKit.BoldAction;
class Graph{
  ArrayList<ArrayList<Integer>> graph;
  int V;
  Graph(int nodes){
    V=nodes;
    graph=new ArrayList<ArrayList<Integer>>();
    for(int i=0;i<V;i++){
      graph.add(new ArrayList<Integer>());
    }
  }
  void addEdge(int v,int u){
    graph.get(v).add(u);
    graph.get(u).add(v);
  }
  void printGraph(){
    for(int i=0;i<V;i++){
      System.out.print("Node "+i);
      for(int x:graph.get(i))System.out.print("-> "+x);
      System.out.println();
    }
  }
  void dfsUtil(int node,boolean visited[]){
      visited[node]=true;
      System.out.print(node+" ");
      for(int x:graph.get(node)){
          if(visited[x]==false){
              dfsUtil(x, visited);
          }
      }
  }
  void DFS(int start){
      boolean visited[] = new boolean[V];
      System.out.println("DFS Traversak of an array");
      dfsUtil(start, visited);
  }
}
public class Graph1{
  public static void main(String args[]) {
    Graph g=new Graph(5);
    g.addEdge(0,1);
    g.addEdge(3,2);
    g.addEdge(2,4);
    g.addEdge(1,4);
    g.addEdge(3,1);
    g.addEdge(2,0);
    g.printGraph();
    g.DFS(0);
  }
}
